/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1.0;

// Geometric parameters

L_expE 1.5e-2;            // Length of exposed electrode
t_expE 5.0e-5;         // Thickness of exposed electrode 
L_grdE 2.5e-2;            // Length of grounded electrode
t_grdE 5.0e-5;         // Thickness of grounded electrode
t_Diel 3.3e-4;        // Dielectric between electrodes thickness
// L_Gap 0.0;           // Gap between electrodes 

x_min -2.0e-2;   // Domain length in x-axis min
x_max 3.0e-2;    // Domain length in x-axis max
y_min -5.0e-3;    // Domain length in y-axis min
y_max 1.5e-2;    // Domain length in y-axis max

// Grid managment in x-direction

cellsExpE 60;           // Cells over exposed electrode in the x-axis
cellsGrdE 65;           // Cell along the grounded electrode in the x-axis  
// cellsGap 25;             // Cells along the gap in the x-axis    
cellsLHS 3;            // Cells in LHS block in the x-axis
cellsRHS 2;            // Cells in RHS block in the x-axis

expRatioE 0.0036;             // Expansion ratio of exposed electrode
expRatioG 445.7915;             // Expansion ratio of grounded electrode
expRatioLHS 0.3086;            // Expansion ratio of the left side of the domain in the x-axis  
expRatioRHS 2.13;            // Expansion ratio of the right side of the domain in the x-axis 

// Grid managment in y-direction

cellsThcDiel 66;            // Cells in the blocks of the dielectric thickness in the y-axis
cellsThcElec 10;            // Cells in the blocks of the exposed electrode thickness in the y-axis
cellsThcGrd 10;            // Cells in the blocks of the grounded electrode thickness in the y-axis
cellsWallTop 60;            // Cells from the thickness of the exposed electrode up to the top boundary in the y-axis
cellsGrdBot 48;            // Cells from the thickness of the grounded electrode up to the bottom boundary in the y-axis    

expRatioyu 276.8014;                // Expansion ratio of the upper side of the domain in the y-axis
expRatioyl 0.0113;                // Expansion ratio of the down side of the domain in the y-axis

// Grid managment in z-direction
z_start -0.0025;
z_end 0.0025;                   // Depth in z-axis

// Vertices assign

X0 0.0;
Y0 0.0;
X1 $L_grdE;
Y1 0.0;
X2 $x_max;    
Y2 0.0;

X3 $x_max;
Y3 $t_expE;
X4 $x_max;
Y4 $y_max;
X5 $L_grdE;
Y5 $y_max;
X6 $L_grdE; 
Y6 $t_expE;
X7 0.0;
Y7 $t_expE;
X8 0.0;
Y8 $y_max;
X9 #eval "-1*$L_expE";
Y9 $y_max;
X10 #eval "-1*$L_expE";
Y10 $t_expE;
X11 $x_min;
Y11 $y_max;
X12 $x_min;
Y12 $t_expE;

X13 $x_min;
Y13 0.0;
X14 #eval "-1*$L_expE";
Y14 0.0;

X15 $x_min;    
Y15 #eval "-1*$t_Diel";
X16 #eval "-1*$L_expE";
Y16 #eval "-1*$t_Diel";
X17 0.0;
Y17 #eval "-1*$t_Diel";
X18 $L_grdE;
Y18 #eval "-1*$t_Diel";
X19 $x_max;
Y19 #eval "-1*$t_Diel";

X20 $x_max;
Y20 #eval "-1*($t_Diel+$t_grdE)";
X21 $L_grdE;
Y21 #eval "-1*($t_Diel+$t_grdE)";
X22 0.0;
Y22 #eval "-1*($t_Diel+$t_grdE)";
X23 #eval "-1*$L_expE";
Y23 #eval "-1*($t_Diel+$t_grdE)";
X24 $x_min;
Y24 #eval "-1*($t_Diel+$t_grdE)";

X25 $x_min;
Y25 $y_min;
X26 #eval "-1*$L_expE";
Y26 $y_min;
X27 0.0;
Y27 $y_min;
X28 $L_grdE;
Y28 $y_min;
X29 $x_max;
Y29 $y_min;

vertices
(
    ($X0 $Y0 $z_start)              // 0
    ($X1 $Y1 $z_start)              // 1
    ($X2 $Y2 $z_start)              // 2
    
    ($X3 $Y3 $z_start)              // 3
    ($X4 $Y4 $z_start)              // 4
    ($X5 $Y5 $z_start)              // 5
    ($X6 $Y6 $z_start)              // 6
    ($X7 $Y7 $z_start)              // 7
    ($X8 $Y8 $z_start)              // 8
    ($X9 $Y9 $z_start)              // 9
    ($X10 $Y10 $z_start)            // 10
    ($X11 $Y11 $z_start)            // 11
    ($X12 $Y12 $z_start)            // 12
    
    ($X13 $Y13 $z_start)            // 13
    ($X14 $Y14 $z_start)            // 14
    
    ($X15 $Y15 $z_start)            // 15
    ($X16 $Y16 $z_start)            // 16
    ($X17 $Y17 $z_start)            // 17
    ($X18 $Y18 $z_start)            // 18
    ($X19 $Y18 $z_start)            // 19
    
    ($X20 $Y20 $z_start)            // 20
    ($X21 $Y21 $z_start)            // 21
    ($X22 $Y22 $z_start)            // 22
    ($X23 $Y23 $z_start)            // 23
    ($X24 $Y24 $z_start)            // 24
    
    ($X25 $Y25 $z_start)            // 25
    ($X26 $Y26 $z_start)            // 26
    ($X27 $Y27 $z_start)            // 27
    ($X28 $Y28 $z_start)            // 28
    ($X29 $Y29 $z_start)            // 29
    
  
    ($X0 $Y0 $z_end)              // 30
    ($X1 $Y1 $z_end)              // 31
    ($X2 $Y2 $z_end)              // 32
    
    ($X3 $Y3 $z_end)              // 33
    ($X4 $Y4 $z_end)              // 34
    ($X5 $Y5 $z_end)              // 35
    ($X6 $Y6 $z_end)              // 36
    ($X7 $Y7 $z_end)              // 37
    ($X8 $Y8 $z_end)              // 38
    ($X9 $Y9 $z_end)              // 39
    ($X10 $Y10 $z_end)            // 40
    ($X11 $Y11 $z_end)            // 41
    ($X12 $Y12 $z_end)            // 42
    
    ($X13 $Y13 $z_end)            // 43
    ($X14 $Y14 $z_end)            // 44
    
    ($X15 $Y15 $z_end)            // 45
    ($X16 $Y16 $z_end)            // 46
    ($X17 $Y17 $z_end)            // 47
    ($X18 $Y18 $z_end)            // 48
    ($X19 $Y18 $z_end)            // 49
    
    ($X20 $Y20 $z_end)            // 50
    ($X21 $Y21 $z_end)            // 51
    ($X22 $Y22 $z_end)            // 52
    ($X23 $Y23 $z_end)            // 53
    ($X24 $Y24 $z_end)            // 54
    
    ($X25 $Y25 $z_end)            // 55
    ($X26 $Y26 $z_end)            // 56
    ($X27 $Y27 $z_end)            // 57
    ($X28 $Y28 $z_end)            // 58
    ($X29 $Y29 $z_end)            // 59
);


blocks
(
    // coment from Block 7 to 17 when only air region is required
    hex (0 1 6 7 30 31 36 37) ($cellsGrdE $cellsThcElec 1) simpleGrading ($expRatioG 1 1)                       // Block 0
    
    hex (1 2 3 6 31 32 33 36) ($cellsRHS $cellsThcElec 1) simpleGrading ($expRatioRHS 1 1)             // Block 1
    
   
    hex (6 3 4 5 36 33 34 35) ($cellsRHS $cellsWallTop 1) simpleGrading ($expRatioRHS $expRatioyu 1)    // Block 2

    hex (7 6 5 8 37 36 35 38) ($cellsGrdE $cellsWallTop 1) simpleGrading ($expRatioG $expRatioyu 1)              // Block 3
    
    hex (10 7 8 9 40 37 38 39) ($cellsExpE $cellsWallTop 1) simpleGrading ($expRatioE $expRatioyu 1)             // Block 4
    
    hex (12 10 9 11 42 40 39 41) ($cellsLHS $cellsWallTop 1) simpleGrading ($expRatioLHS $expRatioyu 1)    // Block 5     
    

    hex (13 14 10 12 43 44 40 42) ($cellsLHS $cellsThcElec 1) simpleGrading ($expRatioLHS 1 1)           // Block 6
    
    
    hex (15 16 14 13 45 46 44 43) ($cellsLHS $cellsThcDiel 1) simpleGrading ($expRatioLHS 1 1)    // Block 7 

    hex (16 17 0 14 46 47 30 44) ($cellsExpE $cellsThcDiel 1) simpleGrading ($expRatioE 1 1)    // Block 8
    
    hex (17 18 1 0 47 48 31 30) ($cellsGrdE $cellsThcDiel 1) simpleGrading ($expRatioG 1 1)    // Block 9

    hex (18 19 2 1 48 49 32 31) ($cellsRHS $cellsThcDiel 1) simpleGrading ($expRatioRHS 1 1)    // Block 10
    

    hex (21 20 19 18 51 50 49 48) ($cellsRHS $cellsThcGrd 1) simpleGrading ($expRatioRHS 1 1)    // Block 11

    hex (23 22 17 16 53 52 47 46) ($cellsExpE $cellsThcGrd 1) simpleGrading ($expRatioE 1 1)    // Block 12

    hex (24 23 16 15 54 53 46 45) ($cellsLHS $cellsThcGrd 1) simpleGrading ($expRatioLHS 1 1)    // Block 13
    
    
    hex (25 26 23 24 55 56 53 54) ($cellsLHS $cellsGrdBot 1) simpleGrading ($expRatioLHS $expRatioyl 1)    // Block 14
    
    hex (26 27 22 23 56 57 52 53) ($cellsExpE $cellsGrdBot 1) simpleGrading ($expRatioE $expRatioyl 1)    // Block 15
    
    hex (27 28 21 22 57 58 51 52) ($cellsGrdE $cellsGrdBot 1) simpleGrading ($expRatioG $expRatioyl 1)    // Block 16
    
    hex (28 29 20 21 58 59 50 51) ($cellsRHS $cellsGrdBot 1) simpleGrading ($expRatioRHS $expRatioyl 1)    // Block 17
);

edges
(
);

boundary
(
    top
    {
        type patch;
        faces
        (
            (11 41 39 9)   // From Block 5
            (9 39 38 8)   // From Block 4
            (8 38 35 5)   // From Block 3
            (5 35 34 4)   // From Block 2
        );
    }
    
    bottom
    {
        type patch;
        faces
        (
            (25 55 56 26)   // From Block 14
            (26 56 57 27)   // From Block 15
            (27 57 58 28)   // From Block 16
            (28 58 59 29)   // From Block 17
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (12 42 41 11)    // from Block 5
            (13 43 42 12)    // From Block 6
            (15 45 43 13)    // from Block 7
            (24 54 45 15)    // From Block 13
            (25 55 54 24)    // from Block 14
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (3 33 34 4)    // From Block 2
            (2 32 33 3)    // From Block 1
            (19 49 32 2)    // From Block 10
            (20 50 49 19)    // From Block 11
            (29 59 50 20)    // From Block 17
        );
    }

    electrode_exposed
    {
        type wall;
        faces
        (
            (0 30 37 7)     // From Block 0
            (10 40 37 7)     // From Block 4
            (14 44 40 10)     // From Block 6
            (14 44 30 0)     // From Block 8
        );
    }

    electrode_grounded
    {
        type wall;
        faces
        (
            (21 51 48 18)   // From Block 11
            (17 47 48 18)   // From Block 9
            (22 52 47 17)   // From Block 12
            (22 52 51 21)   // From Block 16
        );
    }
    
    // uncoment for wall at air region
    // wall
    // {
        // type wall;
        // faces
        // (
            // (13 43 44 14) // From Block 6
            // (1 31 32 2) // From Block 1
        // )
    // }
    
    // wallRhoC
    // {
        // type wall;
        // faces
        // (
            // (0 30 31 1) // From Block 0
        // )
    // }

    back
    {
        type empty;
        faces
        (
            // back
            (0 1 6 7)   // From Block 0
            (1 2 3 6)    // From Block 1
            (6 3 4 5)    // From Block 2
            (7 6 5 8)   // From Block 3
            (10 7 8 9)   // From Block 4
            (12 10 9 11)    // From Block 5
            (13 14 10 12)  // From Block 6
            (15 16 14 13)   // From Block 7
            (16 17 0 14)    // From Block 8
            (17 18 1 0)    // From Block 9
            (18 19 2 1)   // From Block 10
            (21 20 19 18)   // From Block 11
            (23 22 17 16)    // From Block 12
            (24 23 16 15)  // From Block 13
            (25 26 23 24)  // From Block 14
            (26 27 22 23)  // From Block 15
            (27 28 21 22)  // From Block 16
            (28 29 20 21)  // From Block 17
        );
    }
    
    front
    {
        type empty;
        faces
        (
            // front
            (30 31 36 37)   // From Block 0
            (31 32 33 36)    // From Block 1
            (36 33 34 35)    // From Block 2
            (37 36 35 38)   // From Block 3
            (40 37 38 39)   // From Block 4
            (42 40 39 41)    // From Block 5
            (43 44 40 42)  // From Block 6
            (45 46 44 43)   // From Block 7
            (46 47 30 44)    // From Block 8
            (47 48 31 30)    // From Block 9
            (48 49 32 31)   // From Block 10
            (51 50 49 48)   // From Block 11
            (53 52 47 46)    // From Block 12
            (54 53 46 45)  // From Block 13
            (55 56 53 54)  // From Block 14
            (56 57 52 53)  // From Block 15
            (57 58 51 52)  // From Block 16
            (58 59 51 50)  // From Block 17
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //